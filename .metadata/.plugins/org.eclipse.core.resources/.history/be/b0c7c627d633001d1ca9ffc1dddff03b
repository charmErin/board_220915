package com.its.board.controller;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.its.board.dto.MemberDTO;
import com.its.board.service.MemberService;

import lombok.RequiredArgsConstructor;

@Controller
@RequiredArgsConstructor
@RequestMapping("/member")
public class MemberController {
	private final MemberService memberService;
	
	@GetMapping("/save-form")
	public String saveForm() {
		return "member/save";
	}
	
	@PostMapping("/save")
	public String save(@ModelAttribute MemberDTO memberDTO) {
		boolean result = memberService.save(memberDTO);
		if (result) {
			return "member/login";
		} else {
			System.out.println("회원가입 실패");
			return "index";
		}
	}
	
	@GetMapping("/login-form")
	public String loginForm() {
		return "member/login";
	}
	
	@PostMapping("/login")
	public String login(@ModelAttribute MemberDTO memberDTO,
						HttpSession session) {
		MemberDTO loginDTO = memberService.login(memberDTO);
		if (loginDTO != null) {
			session.setAttribute("id", loginDTO.getId());
			session.setAttribute("memberName", loginDTO.getMemberName());
			return "index";
		} else {
			System.out.println("로그인 실패");
			return "member/login";
		}
	}
	
	@GetMapping("/detail/{id}")
	public String findById(@PathVariable Long id, Model model) {
		MemberDTO memberDTO = memberService.findById(id);
		model.addAttribute("member", memberDTO);
		return "member/detail";
	}
	
	@GetMapping("/findAll")
	public String findAll(Model model) {
		List<MemberDTO> memberDTOList = memberService.findAll();
		model.addAttribute("memberList", memberDTOList);
		return "findAll";
	}
	
	@GetMapping("/update-form/{id}")
	public String updateForm(@PathVariable Long id, Model model) {
		MemberDTO memberDTO = memberService.findById(id);
		model.addAttribute("member", memberDTO);
		return "member/update";
	}
	
	@PostMapping("/update")
	public String update(@ModelAttribute MemberDTO memberDTO) {
		memberSerivce.update(memberDTO);
		return "redirect:/member/findById
	}

}
